def main():
  opcodes = [3,225,1,225,6,6,1100,1,238,225,104,0,101,67,166,224,1001,224,-110,224,4,224,102,8,223,223,1001,224,4,224,1,224,223,223,2,62,66,224,101,-406,224,224,4,224,102,8,223,223,101,3,224,224,1,224,223,223,1101,76,51,225,1101,51,29,225,1102,57,14,225,1102,64,48,224,1001,224,-3072,224,4,224,102,8,223,223,1001,224,1,224,1,224,223,223,1001,217,90,224,1001,224,-101,224,4,224,1002,223,8,223,1001,224,2,224,1,223,224,223,1101,57,55,224,1001,224,-112,224,4,224,102,8,223,223,1001,224,7,224,1,223,224,223,1102,5,62,225,1102,49,68,225,102,40,140,224,101,-2720,224,224,4,224,1002,223,8,223,1001,224,4,224,1,223,224,223,1101,92,43,225,1101,93,21,225,1002,170,31,224,101,-651,224,224,4,224,102,8,223,223,101,4,224,224,1,223,224,223,1,136,57,224,1001,224,-138,224,4,224,102,8,223,223,101,2,224,224,1,223,224,223,1102,11,85,225,4,223,99,0,0,0,677,0,0,0,0,0,0,0,0,0,0,0,1105,0,99999,1105,227,247,1105,1,99999,1005,227,99999,1005,0,256,1105,1,99999,1106,227,99999,1106,0,265,1105,1,99999,1006,0,99999,1006,227,274,1105,1,99999,1105,1,280,1105,1,99999,1,225,225,225,1101,294,0,0,105,1,0,1105,1,99999,1106,0,300,1105,1,99999,1,225,225,225,1101,314,0,0,106,0,0,1105,1,99999,1107,226,226,224,102,2,223,223,1006,224,329,1001,223,1,223,1007,226,677,224,1002,223,2,223,1005,224,344,101,1,223,223,108,677,677,224,1002,223,2,223,1006,224,359,101,1,223,223,1008,226,226,224,1002,223,2,223,1005,224,374,1001,223,1,223,108,677,226,224,1002,223,2,223,1006,224,389,101,1,223,223,7,226,226,224,102,2,223,223,1006,224,404,101,1,223,223,7,677,226,224,1002,223,2,223,1005,224,419,101,1,223,223,107,226,226,224,102,2,223,223,1006,224,434,1001,223,1,223,1008,677,677,224,1002,223,2,223,1005,224,449,101,1,223,223,108,226,226,224,102,2,223,223,1005,224,464,1001,223,1,223,1108,226,677,224,1002,223,2,223,1005,224,479,1001,223,1,223,8,677,226,224,102,2,223,223,1006,224,494,1001,223,1,223,1108,677,677,224,102,2,223,223,1006,224,509,1001,223,1,223,1007,226,226,224,1002,223,2,223,1005,224,524,1001,223,1,223,7,226,677,224,1002,223,2,223,1005,224,539,1001,223,1,223,8,677,677,224,102,2,223,223,1005,224,554,1001,223,1,223,107,226,677,224,1002,223,2,223,1006,224,569,101,1,223,223,1107,226,677,224,102,2,223,223,1005,224,584,1001,223,1,223,1108,677,226,224,102,2,223,223,1006,224,599,1001,223,1,223,1008,677,226,224,102,2,223,223,1006,224,614,101,1,223,223,107,677,677,224,102,2,223,223,1006,224,629,1001,223,1,223,1107,677,226,224,1002,223,2,223,1005,224,644,101,1,223,223,8,226,677,224,102,2,223,223,1005,224,659,1001,223,1,223,1007,677,677,224,102,2,223,223,1005,224,674,1001,223,1,223,4,223,99,226]
  #opcodes = [3,21,1008,21,8,20,1005,20,22,107,8,21,20,1006,20,31,1106,0,36,98,0,0,1002,21,125,20,4,20,1105,1,46,104,999,1105,1,46,1101,1000,1,20,4,20,1105,1,46,98,99]
  input = 5	
  pointer = 0
  while(True):
    instructionList = analyzeOpcode(opcodes[pointer])
    if instructionList[0]!=99:
      if instructionList[1]==1:
        leftValue = opcodes[pointer+1]
      else:
        leftValue = opcodes[opcodes[pointer+1]]
    if instructionList[0]==1 or instructionList[0]==2 or instructionList[0]==5 or instructionList[0]==6 or instructionList[0]==7 or instructionList[0]==8:

      if instructionList[2]==1:
        rightValue = opcodes[pointer+2]
      else:
        opcodes[pointer+2]
        rightValue = opcodes[opcodes[pointer+2]]
    
    if instructionList[0]==99:
      break

    elif instructionList[0]==1:
      opcodes[opcodes[pointer+3]]=leftValue + rightValue
      pointer += 4
    elif instructionList[0]==2:
      opcodes[opcodes[pointer+3]] = leftValue * rightValue
      pointer += 4
    elif instructionList[0]==3:
      opcodes[opcodes[pointer+1]]=input
      pointer += 2
    elif instructionList[0]==4:
      print leftValue
      pointer += 2
    elif instructionList[0]==5:
      if leftValue != 0:
        pointer = rightValue
      else:
        pointer += 3
    elif instructionList[0]==6:
      if leftValue == 0:
        pointer = rightValue
      else:
        pointer += 3
    elif instructionList[0]==7:
      if leftValue < rightValue:
        opcodes[opcodes[pointer+3]]=1
      else:
        opcodes[opcodes[pointer+3]]=0
      pointer += 4
    elif instructionList[0]==8:
      if leftValue == rightValue:
        opcodes[opcodes[pointer+3]]=1
      else:
        opcodes[opcodes[pointer+3]]=0
      pointer += 4
    else:
      print "Invalid Action Code you fucktard"
      print pointer
      break




def analyzeOpcode(opcode):
  if len(str(opcode))==1:
    return [opcode,0,0]
  else:
    actionCode = int(str(opcode)[-2:])
  if len(str(opcode)) >= 3:
    indicatorOne = int(str(opcode)[-3:-2])
  else:
    indicatorOne = 0
  if len(str(opcode)) >= 4:
    indicatorTwo = int(str(opcode)[-4:-3])
  else:
    indicatorTwo = 0
  return [actionCode, indicatorOne, indicatorTwo]

def setState(memory, noun, verb):
  if(len(memory)<3):
    print "FUCK"
  result = list(memory)
  result[1] = noun
  result[2] = verb
  return result
main()
